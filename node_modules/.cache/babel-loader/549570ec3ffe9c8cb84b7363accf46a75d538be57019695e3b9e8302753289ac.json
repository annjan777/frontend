{"ast":null,"code":"var _jsxFileName = \"/Users/annjan/section1-form/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport campaigns from './campaigns'; // Import the campaigns list\nimport statesDistricts from './statesDistricts.json'; // Import the JSON file for states and districts\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    month: '',\n    state: '',\n    district: '',\n    village: '',\n    block: '',\n    campaignsData: {} // Campaign-specific form fields\n  });\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [showPopup, setShowPopup] = useState(false); // Control the popup visibility\n  const [submittedData, setSubmittedData] = useState(null); // Store submitted data for popup display\n\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  useEffect(() => {\n    // Extract unique states and initialize campaignsData\n    const uniqueStates = [...new Set(statesDistricts.map(item => item.STATE))];\n    setStates(uniqueStates);\n    const initialCampaignsData = {};\n    campaigns.forEach(campaign => {\n      initialCampaignsData[campaign.id] = {\n        quantity: '',\n        amount: ''\n      };\n    });\n    setFormData(prev => ({\n      ...prev,\n      campaignsData: initialCampaignsData\n    }));\n  }, []);\n  const handleStateChange = e => {\n    const selectedState = e.target.value;\n    setFormData({\n      ...formData,\n      state: selectedState,\n      district: ''\n    });\n    const filteredDistricts = statesDistricts.filter(item => item.STATE === selectedState).map(item => item.DISTRICT);\n    setDistricts(filteredDistricts);\n  };\n  const handleFormChange = (e, campaignId, field) => {\n    const value = e.target.value;\n    setFormData(prev => ({\n      ...prev,\n      campaignsData: {\n        ...prev.campaignsData,\n        [campaignId]: {\n          ...prev.campaignsData[campaignId],\n          [field]: value\n        }\n      }\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmittedData(formData); // Store form data to display in the popup\n    setShowPopup(true); // Show the confirmation popup\n  };\n  const handleConfirm = async () => {\n    try {\n      const response = await axios.put('http://localhost:8001/update', submittedData);\n      alert(response.data.message);\n      // Clear the form after successful submission\n      setFormData({\n        month: '',\n        state: '',\n        district: '',\n        village: '',\n        block: '',\n        campaignsData: campaigns.reduce((acc, campaign) => {\n          acc[campaign.id] = {\n            quantity: '',\n            amount: ''\n          };\n          return acc;\n        }, {})\n      });\n      setShowPopup(false); // Close the popup\n    } catch (error) {\n      console.error('Error updating the data:', error);\n      alert('Failed to update the data.');\n    }\n  };\n  const handleCancel = () => {\n    setShowPopup(false); // Close the popup without submitting\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Service Campaign Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Location Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"month\",\n        children: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"month\",\n        name: \"month\",\n        value: formData.month,\n        onChange: e => setFormData({\n          ...formData,\n          month: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: month,\n          children: month\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"state\",\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"state\",\n        name: \"state\",\n        value: formData.state,\n        onChange: handleStateChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state,\n          children: state\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"district\",\n        children: \"District\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"district\",\n        name: \"district\",\n        value: formData.district,\n        onChange: e => setFormData({\n          ...formData,\n          district: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a district\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), districts.map((district, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: district,\n          children: district\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"village\",\n        children: \"Village\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"village\",\n        name: \"village\",\n        value: formData.village,\n        onChange: e => setFormData({\n          ...formData,\n          village: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"block\",\n        children: \"Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"block\",\n        name: \"block\",\n        value: formData.block,\n        onChange: e => setFormData({\n          ...formData,\n          block: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Campaign Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), campaigns.map(campaign => {\n        var _formData$campaignsDa, _formData$campaignsDa2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [campaign.id, \". \", campaign.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            value: ((_formData$campaignsDa = formData.campaignsData[campaign.id]) === null || _formData$campaignsDa === void 0 ? void 0 : _formData$campaignsDa.quantity) || '',\n            onChange: e => handleFormChange(e, campaign.id, 'quantity')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            value: ((_formData$campaignsDa2 = formData.campaignsData[campaign.id]) === null || _formData$campaignsDa2 === void 0 ? void 0 : _formData$campaignsDa2.amount) || '',\n            onChange: e => handleFormChange(e, campaign.id, 'amount')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, campaign.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Confirm your Submission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Month:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 16\n          }, this), \" \", submittedData === null || submittedData === void 0 ? void 0 : submittedData.month]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"State:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 16\n          }, this), \" \", submittedData === null || submittedData === void 0 ? void 0 : submittedData.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"District:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 16\n          }, this), \" \", submittedData === null || submittedData === void 0 ? void 0 : submittedData.district]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Village:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 16\n          }, this), \" \", submittedData === null || submittedData === void 0 ? void 0 : submittedData.village]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Block:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 16\n          }, this), \" \", submittedData === null || submittedData === void 0 ? void 0 : submittedData.block]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Campaigns:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), Object.entries((submittedData === null || submittedData === void 0 ? void 0 : submittedData.campaignsData) || {}).map(([campaignId, details]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Campaign \", campaignId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this), \" - Quantity: \", details.quantity || 'N/A', \", Amount: \", details.amount || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this)\n        }, campaignId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirm,\n          children: \"Yes, Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"upnGpprD89TgQje3HuXMvg8KEKA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","campaigns","statesDistricts","jsxDEV","_jsxDEV","App","_s","formData","setFormData","month","state","district","village","block","campaignsData","states","setStates","districts","setDistricts","showPopup","setShowPopup","submittedData","setSubmittedData","months","uniqueStates","Set","map","item","STATE","initialCampaignsData","forEach","campaign","id","quantity","amount","prev","handleStateChange","e","selectedState","target","value","filteredDistricts","filter","DISTRICT","handleFormChange","campaignId","field","handleSubmit","preventDefault","handleConfirm","response","put","alert","data","message","reduce","acc","error","console","handleCancel","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","name","onChange","required","index","type","_formData$campaignsDa","_formData$campaignsDa2","style","marginBottom","min","className","Object","entries","details","onClick","_c","$RefreshReg$"],"sources":["/Users/annjan/section1-form/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport campaigns from './campaigns'; // Import the campaigns list\nimport statesDistricts from './statesDistricts.json'; // Import the JSON file for states and districts\nimport './App.css';\n\nconst App = () => {\n  const [formData, setFormData] = useState({\n    month: '',\n    state: '',\n    district: '',\n    village: '',\n    block: '',\n    campaignsData: {}, // Campaign-specific form fields\n  });\n\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [showPopup, setShowPopup] = useState(false); // Control the popup visibility\n  const [submittedData, setSubmittedData] = useState(null); // Store submitted data for popup display\n\n  const months = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December',\n  ];\n\n  useEffect(() => {\n    // Extract unique states and initialize campaignsData\n    const uniqueStates = [...new Set(statesDistricts.map((item) => item.STATE))];\n    setStates(uniqueStates);\n\n    const initialCampaignsData = {};\n    campaigns.forEach((campaign) => {\n      initialCampaignsData[campaign.id] = { quantity: '', amount: '' };\n    });\n    setFormData((prev) => ({ ...prev, campaignsData: initialCampaignsData }));\n  }, []);\n\n  const handleStateChange = (e) => {\n    const selectedState = e.target.value;\n    setFormData({ ...formData, state: selectedState, district: '' });\n\n    const filteredDistricts = statesDistricts\n      .filter((item) => item.STATE === selectedState)\n      .map((item) => item.DISTRICT);\n    setDistricts(filteredDistricts);\n  };\n\n  const handleFormChange = (e, campaignId, field) => {\n    const value = e.target.value;\n\n    setFormData((prev) => ({\n      ...prev,\n      campaignsData: {\n        ...prev.campaignsData,\n        [campaignId]: {\n          ...prev.campaignsData[campaignId],\n          [field]: value,\n        },\n      },\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmittedData(formData); // Store form data to display in the popup\n    setShowPopup(true); // Show the confirmation popup\n  };\n\n  const handleConfirm = async () => {\n    try {\n      const response = await axios.put('http://localhost:8001/update', submittedData);\n      alert(response.data.message);\n      // Clear the form after successful submission\n      setFormData({\n        month: '',\n        state: '',\n        district: '',\n        village: '',\n        block: '',\n        campaignsData: campaigns.reduce((acc, campaign) => {\n          acc[campaign.id] = { quantity: '', amount: '' };\n          return acc;\n        }, {}),\n      });\n      setShowPopup(false); // Close the popup\n    } catch (error) {\n      console.error('Error updating the data:', error);\n      alert('Failed to update the data.');\n    }\n  };\n\n  const handleCancel = () => {\n    setShowPopup(false); // Close the popup without submitting\n  };\n\n  return (\n    <div>\n      <h1>Service Campaign Form</h1>\n      <form onSubmit={handleSubmit}>\n        {/* Section 1: General Form Fields */}\n        <h2>Location Details</h2>\n\n        <label htmlFor=\"month\">Month</label>\n        <select\n          id=\"month\"\n          name=\"month\"\n          value={formData.month}\n          onChange={(e) => setFormData({ ...formData, month: e.target.value })}\n          required\n        >\n          <option value=\"\">Select a month</option>\n          {months.map((month, index) => (\n            <option key={index} value={month}>\n              {month}\n            </option>\n          ))}\n        </select>\n\n        <label htmlFor=\"state\">State</label>\n        <select\n          id=\"state\"\n          name=\"state\"\n          value={formData.state}\n          onChange={handleStateChange}\n          required\n        >\n          <option value=\"\">Select a state</option>\n          {states.map((state, index) => (\n            <option key={index} value={state}>\n              {state}\n            </option>\n          ))}\n        </select>\n\n        <label htmlFor=\"district\">District</label>\n        <select\n          id=\"district\"\n          name=\"district\"\n          value={formData.district}\n          onChange={(e) => setFormData({ ...formData, district: e.target.value })}\n          required\n        >\n          <option value=\"\">Select a district</option>\n          {districts.map((district, index) => (\n            <option key={index} value={district}>\n              {district}\n            </option>\n          ))}\n        </select>\n\n        <label htmlFor=\"village\">Village</label>\n        <input\n          type=\"text\"\n          id=\"village\"\n          name=\"village\"\n          value={formData.village}\n          onChange={(e) => setFormData({ ...formData, village: e.target.value })}\n          required\n        />\n\n        <label htmlFor=\"block\">Block</label>\n        <input\n          type=\"text\"\n          id=\"block\"\n          name=\"block\"\n          value={formData.block}\n          onChange={(e) => setFormData({ ...formData, block: e.target.value })}\n          required\n        />\n\n        {/* Section 2: Campaign Details */}\n        <h2>Campaign Details</h2>\n        {campaigns.map((campaign) => (\n          <div key={campaign.id} style={{ marginBottom: '20px' }}>\n            <h3>\n              {campaign.id}. {campaign.name}\n            </h3>\n            <label>Quantity</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              value={formData.campaignsData[campaign.id]?.quantity || ''}\n              onChange={(e) => handleFormChange(e, campaign.id, 'quantity')}\n            />\n            <label>Amount</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              value={formData.campaignsData[campaign.id]?.amount || ''}\n              onChange={(e) => handleFormChange(e, campaign.id, 'amount')}\n            />\n          </div>\n        ))}\n\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {/* Confirmation Popup */}\n      {showPopup && (\n        <div className=\"popup\">\n          <div className=\"popup-content\">\n            <h3>Confirm your Submission</h3>\n            <p><strong>Month:</strong> {submittedData?.month}</p>\n            <p><strong>State:</strong> {submittedData?.state}</p>\n            <p><strong>District:</strong> {submittedData?.district}</p>\n            <p><strong>Village:</strong> {submittedData?.village}</p>\n            <p><strong>Block:</strong> {submittedData?.block}</p>\n            <h4>Campaigns:</h4>\n            {Object.entries(submittedData?.campaignsData || {}).map(([campaignId, details]) => (\n              <div key={campaignId}>\n                <p>\n                  <strong>Campaign {campaignId}</strong> - Quantity: {details.quantity || 'N/A'}, Amount: {details.amount || 'N/A'}\n                </p>\n              </div>\n            ))}\n            <button onClick={handleConfirm}>Yes, Submit</button>\n            <button onClick={handleCancel}>Cancel</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}