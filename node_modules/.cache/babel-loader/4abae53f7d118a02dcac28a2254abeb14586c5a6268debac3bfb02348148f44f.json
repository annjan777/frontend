{"ast":null,"code":"var _jsxFileName = \"/Users/annjan/section1-form/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { reportWebVitals } from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    month: '',\n    state: '',\n    district: '',\n    village: '',\n    block: ''\n  });\n  const [states, setStates] = useState([]); // Array to hold state options\n  const [districts, setDistricts] = useState([]); // Array to hold districts based on selected state\n  const [villages, setVillages] = useState([]); // Array to hold villages based on selected district\n\n  // Example Data (replace this with your actual data)\n  const availableStates = ['State 1', 'State 2', 'State 3']; // Replace with actual states\n  const availableDistricts = {\n    'State 1': ['District 1.1', 'District 1.2'],\n    'State 2': ['District 2.1', 'District 2.2'],\n    'State 3': ['District 3.1', 'District 3.2']\n  }; // Replace with actual districts for each state\n  const availableVillages = {\n    'District 1.1': ['Village 1.1.1', 'Village 1.1.2'],\n    'District 2.1': ['Village 2.1.1', 'Village 2.1.2']\n    // Add other villages based on districts\n  }; // Replace with actual villages for each district\n\n  // Handle changes to inputs\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // When state is changed, reset district and village\n    if (name === 'state') {\n      setFormData({\n        ...formData,\n        district: '',\n        village: ''\n      });\n      setDistricts(availableDistricts[value] || []); // Set districts based on selected state\n    }\n\n    // When district is changed, reset village\n    if (name === 'district') {\n      setFormData({\n        ...formData,\n        village: ''\n      });\n      setVillages(availableVillages[value] || []); // Set villages based on selected district\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put('http://localhost:8001/update', formData);\n      alert(response.data.message);\n    } catch (error) {\n      console.error('Error updating the data:', error);\n      alert('Failed to update the data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Service Campaign Form - Section 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"month\",\n        value: formData.month,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"state\",\n        value: formData.state,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), availableStates.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state,\n          children: state\n        }, state, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"District\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"district\",\n        value: formData.district,\n        onChange: handleChange,\n        required: true,\n        disabled: !formData.state,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a district\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), districts.map(district => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: district,\n          children: district\n        }, district, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Village / Zone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"village\",\n        value: formData.village,\n        onChange: handleChange,\n        required: true,\n        disabled: !formData.district,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a village\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), villages.map(village => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: village,\n          children: village\n        }, village, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Block Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"block\",\n        value: formData.block,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vmb0e5tfs8T5Sui2vZX//Ktdyuw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","reportWebVitals","jsxDEV","_jsxDEV","App","_s","formData","setFormData","month","state","district","village","block","states","setStates","districts","setDistricts","villages","setVillages","availableStates","availableDistricts","availableVillages","handleChange","e","name","value","target","handleSubmit","preventDefault","response","put","alert","data","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","map","disabled","_c","$RefreshReg$"],"sources":["/Users/annjan/section1-form/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { reportWebVitals } from './reportWebVitals';\n\nconst App = () => {\n  const [formData, setFormData] = useState({\n    month: '',\n    state: '',\n    district: '',\n    village: '',\n    block: '',\n  });\n\n  const [states, setStates] = useState([]);  // Array to hold state options\n  const [districts, setDistricts] = useState([]);  // Array to hold districts based on selected state\n  const [villages, setVillages] = useState([]);  // Array to hold villages based on selected district\n\n  // Example Data (replace this with your actual data)\n  const availableStates = ['State 1', 'State 2', 'State 3'];  // Replace with actual states\n  const availableDistricts = {\n    'State 1': ['District 1.1', 'District 1.2'],\n    'State 2': ['District 2.1', 'District 2.2'],\n    'State 3': ['District 3.1', 'District 3.2'],\n  };  // Replace with actual districts for each state\n  const availableVillages = {\n    'District 1.1': ['Village 1.1.1', 'Village 1.1.2'],\n    'District 2.1': ['Village 2.1.1', 'Village 2.1.2'],\n    // Add other villages based on districts\n  };  // Replace with actual villages for each district\n\n  // Handle changes to inputs\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n\n    // When state is changed, reset district and village\n    if (name === 'state') {\n      setFormData({ ...formData, district: '', village: '' });\n      setDistricts(availableDistricts[value] || []);  // Set districts based on selected state\n    }\n\n    // When district is changed, reset village\n    if (name === 'district') {\n      setFormData({ ...formData, village: '' });\n      setVillages(availableVillages[value] || []);  // Set villages based on selected district\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.put('http://localhost:8001/update', formData);\n      alert(response.data.message);\n    } catch (error) {\n      console.error('Error updating the data:', error);\n      alert('Failed to update the data.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Service Campaign Form - Section 1</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Month</label>\n        <input\n          type=\"text\"\n          name=\"month\"\n          value={formData.month}\n          onChange={handleChange}\n          required\n        />\n\n        <label>State</label>\n        <select\n          name=\"state\"\n          value={formData.state}\n          onChange={handleChange}\n          required\n        >\n          <option value=\"\">Select a state</option>\n          {availableStates.map((state) => (\n            <option key={state} value={state}>\n              {state}\n            </option>\n          ))}\n        </select>\n\n        <label>District</label>\n        <select\n          name=\"district\"\n          value={formData.district}\n          onChange={handleChange}\n          required\n          disabled={!formData.state}\n        >\n          <option value=\"\">Select a district</option>\n          {districts.map((district) => (\n            <option key={district} value={district}>\n              {district}\n            </option>\n          ))}\n        </select>\n\n        <label>Village / Zone</label>\n        <select\n          name=\"village\"\n          value={formData.village}\n          onChange={handleChange}\n          required\n          disabled={!formData.district}\n        >\n          <option value=\"\">Select a village</option>\n          {villages.map((village) => (\n            <option key={village} value={village}>\n              {village}\n            </option>\n          ))}\n        </select>\n\n        <label>Block Name</label>\n        <input\n          type=\"text\"\n          name=\"block\"\n          value={formData.block}\n          onChange={handleChange}\n          required\n        />\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC3C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACjD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAE/C;EACA,MAAMoB,eAAe,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAE;EAC5D,MAAMC,kBAAkB,GAAG;IACzB,SAAS,EAAE,CAAC,cAAc,EAAE,cAAc,CAAC;IAC3C,SAAS,EAAE,CAAC,cAAc,EAAE,cAAc,CAAC;IAC3C,SAAS,EAAE,CAAC,cAAc,EAAE,cAAc;EAC5C,CAAC,CAAC,CAAE;EACJ,MAAMC,iBAAiB,GAAG;IACxB,cAAc,EAAE,CAAC,eAAe,EAAE,eAAe,CAAC;IAClD,cAAc,EAAE,CAAC,eAAe,EAAE,eAAe;IACjD;EACF,CAAC,CAAC,CAAE;;EAEJ;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCnB,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACkB,IAAI,GAAGC;IAAM,CAAC,CAAC;;IAE3C;IACA,IAAID,IAAI,KAAK,OAAO,EAAE;MACpBjB,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEI,QAAQ,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;MACvDK,YAAY,CAACI,kBAAkB,CAACK,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAE;IAClD;;IAEA;IACA,IAAID,IAAI,KAAK,UAAU,EAAE;MACvBjB,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEK,OAAO,EAAE;MAAG,CAAC,CAAC;MACzCO,WAAW,CAACG,iBAAiB,CAACI,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAE;IAChD;EACF,CAAC;;EAED;EACA,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,8BAA8B,EAAExB,QAAQ,CAAC;MAC1EyB,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDH,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,oBACE5B,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CrC,OAAA;MAAMsC,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBAC3BjC,OAAA;QAAAiC,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBrC,OAAA;QACEuC,IAAI,EAAC,MAAM;QACXlB,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEnB,QAAQ,CAACE,KAAM;QACtBmC,QAAQ,EAAErB,YAAa;QACvBsB,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEFrC,OAAA;QAAAiC,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBrC,OAAA;QACEqB,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEnB,QAAQ,CAACG,KAAM;QACtBkC,QAAQ,EAAErB,YAAa;QACvBsB,QAAQ;QAAAR,QAAA,gBAERjC,OAAA;UAAQsB,KAAK,EAAC,EAAE;UAAAW,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACvCrB,eAAe,CAAC0B,GAAG,CAAEpC,KAAK,iBACzBN,OAAA;UAAoBsB,KAAK,EAAEhB,KAAM;UAAA2B,QAAA,EAC9B3B;QAAK,GADKA,KAAK;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAETrC,OAAA;QAAAiC,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBrC,OAAA;QACEqB,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEnB,QAAQ,CAACI,QAAS;QACzBiC,QAAQ,EAAErB,YAAa;QACvBsB,QAAQ;QACRE,QAAQ,EAAE,CAACxC,QAAQ,CAACG,KAAM;QAAA2B,QAAA,gBAE1BjC,OAAA;UAAQsB,KAAK,EAAC,EAAE;UAAAW,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC1CzB,SAAS,CAAC8B,GAAG,CAAEnC,QAAQ,iBACtBP,OAAA;UAAuBsB,KAAK,EAAEf,QAAS;UAAA0B,QAAA,EACpC1B;QAAQ,GADEA,QAAQ;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAETrC,OAAA;QAAAiC,QAAA,EAAO;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7BrC,OAAA;QACEqB,IAAI,EAAC,SAAS;QACdC,KAAK,EAAEnB,QAAQ,CAACK,OAAQ;QACxBgC,QAAQ,EAAErB,YAAa;QACvBsB,QAAQ;QACRE,QAAQ,EAAE,CAACxC,QAAQ,CAACI,QAAS;QAAA0B,QAAA,gBAE7BjC,OAAA;UAAQsB,KAAK,EAAC,EAAE;UAAAW,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACzCvB,QAAQ,CAAC4B,GAAG,CAAElC,OAAO,iBACpBR,OAAA;UAAsBsB,KAAK,EAAEd,OAAQ;UAAAyB,QAAA,EAClCzB;QAAO,GADGA,OAAO;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAETrC,OAAA;QAAAiC,QAAA,EAAO;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzBrC,OAAA;QACEuC,IAAI,EAAC,MAAM;QACXlB,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEnB,QAAQ,CAACM,KAAM;QACtB+B,QAAQ,EAAErB,YAAa;QACvBsB,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEFrC,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnC,EAAA,CAjIID,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AAmIT,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}