{"ast":null,"code":"var _jsxFileName = \"/Users/annjan/section1-form/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport campaigns from \"./campaigns\";\nimport statesDistricts from \"./statesDistricts.json\";\nimport \"./App.css\";\nimport Login from \"./components/Login\"; // Importing Login component\nimport AdminPage from \"./AdminPage\"; // Importing AdminPage component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    month: \"\",\n    state: \"\",\n    district: \"\",\n    village: \"\",\n    customVillage: \"\",\n    block: \"\",\n    campaignsData: {}\n  });\n  const [states, setStates] = useState([]);\n  const [districtOptions, setDistrictOptions] = useState([]);\n  const [villageOptions, setVillageOptions] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [submittedData, setSubmittedData] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // To manage login state\n  const [isAdmin, setIsAdmin] = useState(false); // To manage admin access\n\n  const months = [\"January '25\", \"February '25\", \"March '25\", \"April '25\", \"May '25\", \"June '25\", \"July '25\", \"August '25\", \"September '25\", \"October '25\", \"November '25\", \"December '24\"];\n  useEffect(() => {\n    // Extract unique states from the statesDistricts data\n    const uniqueStates = [...new Set(statesDistricts.map(item => item.STATE.toLowerCase()))];\n    setStates(uniqueStates.sort());\n\n    // Initialize campaignsData with empty values\n    const initialCampaignsData = {};\n    campaigns.forEach(campaign => {\n      initialCampaignsData[campaign.id] = {\n        quantity: \"\",\n        amount: \"\"\n      };\n    });\n    setFormData(prev => ({\n      ...prev,\n      campaignsData: initialCampaignsData\n    }));\n  }, []);\n  const handleStateChange = e => {\n    const selectedState = e.target.value.toLowerCase();\n    setFormData({\n      ...formData,\n      state: selectedState,\n      district: \"\",\n      village: \"\"\n    });\n\n    // Filter districts based on the selected state\n    const filteredDistricts = [...new Set(statesDistricts.filter(item => item.STATE.toLowerCase() === selectedState).map(item => item.DISTRICT.toLowerCase()))].sort();\n    const districtOptions = filteredDistricts.map(district => ({\n      value: district,\n      label: district.charAt(0).toUpperCase() + district.slice(1)\n    }));\n    setDistrictOptions(districtOptions);\n  };\n  const handleDistrictChange = selectedOption => {\n    const selectedDistrict = selectedOption.value;\n    setFormData({\n      ...formData,\n      district: selectedDistrict,\n      village: \"\"\n    });\n\n    // Filter villages based on the selected district\n    const filteredVillages = [...new Set(statesDistricts.filter(item => item.DISTRICT.toLowerCase() === selectedDistrict).map(item => typeof item.Village === \"string\" ? item.Village.toLowerCase() : \"\"))].sort();\n    const villageOptions = filteredVillages.map(village => ({\n      value: village,\n      label: village.charAt(0).toUpperCase() + village.slice(1)\n    }));\n    villageOptions.push({\n      value: \"other\",\n      label: \"Other\"\n    }); // Add \"Other\" option\n    setVillageOptions(villageOptions);\n  };\n  const handleVillageChange = selectedOption => {\n    const selectedVillage = selectedOption.value;\n    setFormData({\n      ...formData,\n      village: selectedVillage,\n      customVillage: \"\"\n    });\n    if (selectedVillage === \"other\") {\n      setFormData({\n        ...formData,\n        village: \"other\"\n      });\n    }\n  };\n  const handleCustomVillageChange = e => {\n    setFormData({\n      ...formData,\n      customVillage: e.target.value\n    });\n  };\n  const handleFormChange = (e, campaignId, field) => {\n    const value = e.target.value;\n    setFormData(prev => ({\n      ...prev,\n      campaignsData: {\n        ...prev.campaignsData,\n        [campaignId]: {\n          ...prev.campaignsData[campaignId],\n          [field]: value\n        }\n      }\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmittedData(formData);\n    setShowPopup(true);\n  };\n  const handleConfirm = async () => {\n    try {\n      const response = await axios.put(\"http://localhost:8001/update\", submittedData);\n      alert(response.data.message);\n\n      // Reset the form after successful submission\n      setFormData({\n        month: \"\",\n        state: \"\",\n        district: \"\",\n        village: \"\",\n        customVillage: \"\",\n        block: \"\",\n        campaignsData: campaigns.reduce((acc, campaign) => {\n          acc[campaign.id] = {\n            quantity: \"\",\n            amount: \"\"\n          };\n          return acc;\n        }, {})\n      });\n      setShowPopup(false);\n    } catch (error) {\n      console.error(\"Error updating the data:\", error);\n      alert(\"Failed to update the data.\");\n    }\n  };\n  const handleCancel = () => {\n    setShowPopup(false);\n  };\n  const getFilteredData = data => {\n    const filteredCampaigns = Object.entries(data.campaignsData || {}).filter(([_, details]) => details.quantity || details.amount);\n    return {\n      ...data,\n      campaignsData: Object.fromEntries(filteredCampaigns)\n    };\n  };\n  const filteredData = submittedData ? getFilteredData(submittedData) : null;\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setIsAdmin(false); // Reset admin status on logout\n  };\n  const handleAdminLogin = () => {\n    setIsAdmin(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Service Campaign Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Year - 2025\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), !isLoggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this) : isAdmin ? /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this) // Display Admin Page if logged in as admin\n    : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"white-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Location Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.month,\n            onChange: e => setFormData({\n              ...formData,\n              month: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: month,\n              children: month\n            }, month, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.state,\n            onChange: handleStateChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a state\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: state,\n              children: state.charAt(0).toUpperCase() + state.slice(1)\n            }, state, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"District\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-container\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: districtOptions,\n              onChange: handleDistrictChange,\n              placeholder: \"Select a district\",\n              isSearchable: true,\n              value: districtOptions.find(option => option.value === formData.district),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Village/Zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-container\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: villageOptions,\n              onChange: handleVillageChange,\n              placeholder: \"Select a village\",\n              isSearchable: true,\n              value: villageOptions.find(option => option.value === formData.village),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), formData.village === \"other\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Enter Custom Village\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.customVillage,\n              onChange: handleCustomVillageChange,\n              placeholder: \"Enter a custom village name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.block,\n            onChange: e => setFormData({\n              ...formData,\n              block: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"white-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Campaign Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), campaigns.map(campaign => {\n            var _formData$campaignsDa, _formData$campaignsDa2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"campaign-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [campaign.id, \". \", campaign.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"campaign-inputs\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  placeholder: \"Quantity\",\n                  value: ((_formData$campaignsDa = formData.campaignsData[campaign.id]) === null || _formData$campaignsDa === void 0 ? void 0 : _formData$campaignsDa.quantity) || \"\",\n                  onChange: e => handleFormChange(e, campaign.id, \"quantity\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  placeholder: \"Amount\",\n                  value: ((_formData$campaignsDa2 = formData.campaignsData[campaign.id]) === null || _formData$campaignsDa2 === void 0 ? void 0 : _formData$campaignsDa2.amount) || \"\",\n                  onChange: e => handleFormChange(e, campaign.id, \"amount\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)]\n            }, campaign.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), showPopup && filteredData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Confirm Submission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Month:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 18\n            }, this), \" \", filteredData.month]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"State:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 18\n            }, this), \" \", filteredData.state]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"District:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 18\n            }, this), \" \", filteredData.district]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Village:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 18\n            }, this), \" \", filteredData.village === \"other\" ? filteredData.customVillage : filteredData.village]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Block:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 18\n            }, this), \" \", filteredData.block]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campaign-details-table\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Campaign Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.entries(filteredData.campaignsData).map(([campaignId, details]) => {\n                const campaign = campaigns.find(c => c.id === parseInt(campaignId));\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: campaign ? campaign.name : \"Unknown Campaign\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: details.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: details.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 25\n                  }, this)]\n                }, campaignId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirm,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancel,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UukyfbmM/tPbamBagAcZ4HfH/fk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Select","campaigns","statesDistricts","Login","AdminPage","jsxDEV","_jsxDEV","App","_s","formData","setFormData","month","state","district","village","customVillage","block","campaignsData","states","setStates","districtOptions","setDistrictOptions","villageOptions","setVillageOptions","showPopup","setShowPopup","submittedData","setSubmittedData","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","months","uniqueStates","Set","map","item","STATE","toLowerCase","sort","initialCampaignsData","forEach","campaign","id","quantity","amount","prev","handleStateChange","e","selectedState","target","value","filteredDistricts","filter","DISTRICT","label","charAt","toUpperCase","slice","handleDistrictChange","selectedOption","selectedDistrict","filteredVillages","Village","push","handleVillageChange","selectedVillage","handleCustomVillageChange","handleFormChange","campaignId","field","handleSubmit","preventDefault","handleConfirm","response","put","alert","data","message","reduce","acc","error","console","handleCancel","getFilteredData","filteredCampaigns","Object","entries","_","details","fromEntries","filteredData","handleLogin","handleLogout","handleAdminLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onSubmit","onChange","required","options","placeholder","isSearchable","find","option","type","_formData$campaignsDa","_formData$campaignsDa2","name","min","c","parseInt","onClick","_c","$RefreshReg$"],"sources":["/Users/annjan/section1-form/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport campaigns from \"./campaigns\";\nimport statesDistricts from \"./statesDistricts.json\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";  // Importing Login component\nimport AdminPage from \"./AdminPage\";  // Importing AdminPage component\n\nconst App = () => {\n  const [formData, setFormData] = useState({\n    month: \"\",\n    state: \"\",\n    district: \"\",\n    village: \"\",\n    customVillage: \"\",\n    block: \"\",\n    campaignsData: {},\n  });\n\n  const [states, setStates] = useState([]);\n  const [districtOptions, setDistrictOptions] = useState([]);\n  const [villageOptions, setVillageOptions] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [submittedData, setSubmittedData] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);  // To manage login state\n  const [isAdmin, setIsAdmin] = useState(false);  // To manage admin access\n\n  const months = [\n    \"January '25\", \"February '25\", \"March '25\", \"April '25\", \"May '25\", \"June '25\", \"July '25\", \"August '25\", \"September '25\", \"October '25\", \"November '25\", \"December '24\",\n  ];\n\n  useEffect(() => {\n    // Extract unique states from the statesDistricts data\n    const uniqueStates = [\n      ...new Set(statesDistricts.map((item) => item.STATE.toLowerCase())),\n    ];\n    setStates(uniqueStates.sort());\n\n    // Initialize campaignsData with empty values\n    const initialCampaignsData = {};\n    campaigns.forEach((campaign) => {\n      initialCampaignsData[campaign.id] = { quantity: \"\", amount: \"\" };\n    });\n    setFormData((prev) => ({ ...prev, campaignsData: initialCampaignsData }));\n  }, []);\n\n  const handleStateChange = (e) => {\n    const selectedState = e.target.value.toLowerCase();\n    setFormData({ ...formData, state: selectedState, district: \"\", village: \"\" });\n\n    // Filter districts based on the selected state\n    const filteredDistricts = [\n      ...new Set(\n        statesDistricts\n          .filter((item) => item.STATE.toLowerCase() === selectedState)\n          .map((item) => item.DISTRICT.toLowerCase())\n      ),\n    ].sort();\n\n    const districtOptions = filteredDistricts.map((district) => ({\n      value: district,\n      label: district.charAt(0).toUpperCase() + district.slice(1),\n    }));\n    setDistrictOptions(districtOptions);\n  };\n\n  const handleDistrictChange = (selectedOption) => {\n    const selectedDistrict = selectedOption.value;\n    setFormData({ ...formData, district: selectedDistrict, village: \"\" });\n\n    // Filter villages based on the selected district\n    const filteredVillages = [\n      ...new Set(\n        statesDistricts\n          .filter((item) => item.DISTRICT.toLowerCase() === selectedDistrict)\n          .map((item) => (typeof item.Village === \"string\" ? item.Village.toLowerCase() : \"\"))\n      ),\n    ].sort();\n\n    const villageOptions = filteredVillages.map((village) => ({\n      value: village,\n      label: village.charAt(0).toUpperCase() + village.slice(1),\n    }));\n\n    villageOptions.push({ value: \"other\", label: \"Other\" }); // Add \"Other\" option\n    setVillageOptions(villageOptions);\n  };\n\n  const handleVillageChange = (selectedOption) => {\n    const selectedVillage = selectedOption.value;\n    setFormData({ ...formData, village: selectedVillage, customVillage: \"\" });\n\n    if (selectedVillage === \"other\") {\n      setFormData({ ...formData, village: \"other\" });\n    }\n  };\n\n  const handleCustomVillageChange = (e) => {\n    setFormData({ ...formData, customVillage: e.target.value });\n  };\n\n  const handleFormChange = (e, campaignId, field) => {\n    const value = e.target.value;\n    setFormData((prev) => ({\n      ...prev,\n      campaignsData: {\n        ...prev.campaignsData,\n        [campaignId]: {\n          ...prev.campaignsData[campaignId],\n          [field]: value,\n        },\n      },\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmittedData(formData);\n    setShowPopup(true);\n  };\n\n  const handleConfirm = async () => {\n    try {\n      const response = await axios.put(\"http://localhost:8001/update\", submittedData);\n      alert(response.data.message);\n\n      // Reset the form after successful submission\n      setFormData({\n        month: \"\",\n        state: \"\",\n        district: \"\",\n        village: \"\",\n        customVillage: \"\",\n        block: \"\",\n        campaignsData: campaigns.reduce((acc, campaign) => {\n          acc[campaign.id] = { quantity: \"\", amount: \"\" };\n          return acc;\n        }, {}),\n      });\n      setShowPopup(false);\n    } catch (error) {\n      console.error(\"Error updating the data:\", error);\n      alert(\"Failed to update the data.\");\n    }\n  };\n\n  const handleCancel = () => {\n    setShowPopup(false);\n  };\n\n  const getFilteredData = (data) => {\n    const filteredCampaigns = Object.entries(data.campaignsData || {}).filter(\n      ([_, details]) => details.quantity || details.amount\n    );\n\n    return {\n      ...data,\n      campaignsData: Object.fromEntries(filteredCampaigns),\n    };\n  };\n\n  const filteredData = submittedData ? getFilteredData(submittedData) : null;\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setIsAdmin(false);  // Reset admin status on logout\n  };\n\n  const handleAdminLogin = () => {\n    setIsAdmin(true);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Service Campaign Form</h1>\n      <h1>Year - 2025</h1>\n\n      {!isLoggedIn ? (\n        <Login onLogin={handleLogin} />\n      ) : isAdmin ? (\n        <AdminPage /> // Display Admin Page if logged in as admin\n      ) : (\n        <div>\n          <form onSubmit={handleSubmit}>\n            <div className=\"white-box\">\n              <h2>Location Details</h2>\n              <label>Month</label>\n              <select\n                value={formData.month}\n                onChange={(e) => setFormData({ ...formData, month: e.target.value })}\n                required\n              >\n                <option value=\"\">Select a month</option>\n                {months.map((month) => (\n                  <option key={month} value={month}>\n                    {month}\n                  </option>\n                ))}\n              </select>\n\n              <label>State</label>\n              <select value={formData.state} onChange={handleStateChange} required>\n                <option value=\"\">Select a state</option>\n                {states.map((state) => (\n                  <option key={state} value={state}>\n                    {state.charAt(0).toUpperCase() + state.slice(1)}\n                  </option>\n                ))}\n              </select>\n\n              <label>District</label>\n              <div className=\"select-container\">\n                <Select\n                  options={districtOptions}\n                  onChange={handleDistrictChange}\n                  placeholder=\"Select a district\"\n                  isSearchable\n                  value={districtOptions.find(\n                    (option) => option.value === formData.district\n                  )}\n                  required\n                />\n              </div>\n\n              <label>Village/Zone</label>\n              <div className=\"select-container\">\n                <Select\n                  options={villageOptions}\n                  onChange={handleVillageChange}\n                  placeholder=\"Select a village\"\n                  isSearchable\n                  value={villageOptions.find(\n                    (option) => option.value === formData.village\n                  )}\n                  required\n                />\n              </div>\n              {formData.village === \"other\" && (\n                <div>\n                  <label>Enter Custom Village</label>\n                  <input\n                    type=\"text\"\n                    value={formData.customVillage}\n                    onChange={handleCustomVillageChange}\n                    placeholder=\"Enter a custom village name\"\n                    required\n                  />\n                </div>\n              )}\n\n              <label>Block</label>\n              <input\n                type=\"text\"\n                value={formData.block}\n                onChange={(e) => setFormData({ ...formData, block: e.target.value })}\n                required\n              />\n            </div>\n\n            {/* Campaign Details */}\n            <div className=\"white-box\">\n              <h2>Campaign Details</h2>\n              {campaigns.map((campaign) => (\n                <div key={campaign.id} className=\"campaign-row\">\n                  <h3>\n                    {campaign.id}. {campaign.name}\n                  </h3>\n                  <div className=\"campaign-inputs\">\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      placeholder=\"Quantity\"\n                      value={formData.campaignsData[campaign.id]?.quantity || \"\"}\n                      onChange={(e) => handleFormChange(e, campaign.id, \"quantity\")}\n                    />\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      placeholder=\"Amount\"\n                      value={formData.campaignsData[campaign.id]?.amount || \"\"}\n                      onChange={(e) => handleFormChange(e, campaign.id, \"amount\")}\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n      )}\n\n      {showPopup && filteredData && (\n        <div className=\"popup\">\n          <div className=\"popup-content\">\n            <h3>Confirm Submission</h3>\n\n            {/* Location Details */}\n            <div className=\"location-details\">\n              <p><strong>Month:</strong> {filteredData.month}</p>\n              <p><strong>State:</strong> {filteredData.state}</p>\n              <p><strong>District:</strong> {filteredData.district}</p>\n              <p><strong>Village:</strong> {filteredData.village === \"other\" ? filteredData.customVillage : filteredData.village}</p>\n              <p><strong>Block:</strong> {filteredData.block}</p>\n            </div>\n\n            {/* Campaign Details Table */}\n            <div className=\"campaign-details-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>Campaign Name</th>\n                    <th>Quantity</th>\n                    <th>Amount</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(filteredData.campaignsData).map(([campaignId, details]) => {\n                    const campaign = campaigns.find(c => c.id === parseInt(campaignId));\n                    return (\n                      <tr key={campaignId}>\n                        <td>{campaign ? campaign.name : \"Unknown Campaign\"}</td>\n                        <td>{details.quantity}</td>\n                        <td>{details.amount}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n\n            <div className=\"popup-actions\">\n              <button onClick={handleConfirm}>Confirm</button>\n              <button onClick={handleCancel}>Edit</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}