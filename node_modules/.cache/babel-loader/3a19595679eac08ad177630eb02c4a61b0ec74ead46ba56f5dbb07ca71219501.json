{"ast":null,"code":"var _jsxFileName = \"/Users/annjan/section1-form/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport statesDistricts from './statesDistricts.json'; // Import the JSON file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    month: '',\n    state: '',\n    district: '',\n    village: '',\n    block: ''\n  });\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  // Populate states from JSON\n  useEffect(() => {\n    const uniqueStates = [...new Set(statesDistricts.map(item => item.STATE))];\n    setStates(uniqueStates);\n  }, []);\n\n  // Handle state selection and filter districts\n  const handleStateChange = e => {\n    const selectedState = e.target.value;\n    setFormData({\n      ...formData,\n      state: selectedState,\n      district: ''\n    });\n    const filteredDistricts = statesDistricts.filter(item => item.STATE === selectedState).map(item => item.DISTRICT);\n    setDistricts(filteredDistricts);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put('http://localhost:8001/update', formData);\n      alert(response.data.message);\n      setFormData({\n        month: '',\n        state: '',\n        district: '',\n        village: '',\n        block: ''\n      }); // Reset form\n      setDistricts([]); // Reset districts dropdown\n    } catch (error) {\n      console.error('Error updating the data:', error);\n      alert('Failed to update the data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Service Campaign Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"month\",\n        children: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"month\",\n        name: \"month\",\n        value: formData.month,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: month,\n          children: month\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"state\",\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"state\",\n        name: \"state\",\n        value: formData.state,\n        onChange: handleStateChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state,\n          children: state\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"district\",\n        children: \"District\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"district\",\n        name: \"district\",\n        value: formData.district,\n        onChange: handleChange,\n        required: true,\n        disabled: !formData.state // Disable until state is selected\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a district\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), districts.map((district, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: district,\n          children: district\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"village\",\n        children: \"Village\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"village\",\n        name: \"village\",\n        value: formData.village,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"block\",\n        children: \"Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"block\",\n        name: \"block\",\n        value: formData.block,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NPgMmMr1ANa+vsK5griEXVFKnDI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","statesDistricts","jsxDEV","_jsxDEV","App","_s","formData","setFormData","month","state","district","village","block","states","setStates","districts","setDistricts","months","uniqueStates","Set","map","item","STATE","handleStateChange","e","selectedState","target","value","filteredDistricts","filter","DISTRICT","handleChange","name","handleSubmit","preventDefault","response","put","alert","data","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","required","index","disabled","type","_c","$RefreshReg$"],"sources":["/Users/annjan/section1-form/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport statesDistricts from './statesDistricts.json'; // Import the JSON file\n\nconst App = () => {\n  const [formData, setFormData] = useState({\n    month: '',\n    state: '',\n    district: '',\n    village: '',\n    block: '',\n  });\n\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  // Populate states from JSON\n  useEffect(() => {\n    const uniqueStates = [...new Set(statesDistricts.map((item) => item.STATE))];\n    setStates(uniqueStates);\n  }, []);\n\n  // Handle state selection and filter districts\n  const handleStateChange = (e) => {\n    const selectedState = e.target.value;\n    setFormData({ ...formData, state: selectedState, district: '' });\n\n    const filteredDistricts = statesDistricts\n      .filter((item) => item.STATE === selectedState)\n      .map((item) => item.DISTRICT);\n    setDistricts(filteredDistricts);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.put('http://localhost:8001/update', formData);\n      alert(response.data.message);\n      setFormData({\n        month: '',\n        state: '',\n        district: '',\n        village: '',\n        block: '',\n      }); // Reset form\n      setDistricts([]); // Reset districts dropdown\n    } catch (error) {\n      console.error('Error updating the data:', error);\n      alert('Failed to update the data.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Service Campaign Form</h1>\n      <form onSubmit={handleSubmit}>\n        {/* Month Dropdown */}\n        <label htmlFor=\"month\">Month</label>\n        <select\n          id=\"month\"\n          name=\"month\"\n          value={formData.month}\n          onChange={handleChange}\n          required\n        >\n          <option value=\"\">Select a month</option>\n          {months.map((month, index) => (\n            <option key={index} value={month}>\n              {month}\n            </option>\n          ))}\n        </select>\n\n        {/* State Dropdown */}\n        <label htmlFor=\"state\">State</label>\n        <select\n          id=\"state\"\n          name=\"state\"\n          value={formData.state}\n          onChange={handleStateChange}\n          required\n        >\n          <option value=\"\">Select a state</option>\n          {states.map((state, index) => (\n            <option key={index} value={state}>\n              {state}\n            </option>\n          ))}\n        </select>\n\n        {/* District Dropdown */}\n        <label htmlFor=\"district\">District</label>\n        <select\n          id=\"district\"\n          name=\"district\"\n          value={formData.district}\n          onChange={handleChange}\n          required\n          disabled={!formData.state} // Disable until state is selected\n        >\n          <option value=\"\">Select a district</option>\n          {districts.map((district, index) => (\n            <option key={index} value={district}>\n              {district}\n            </option>\n          ))}\n        </select>\n\n        {/* Village Input */}\n        <label htmlFor=\"village\">Village</label>\n        <input\n          type=\"text\"\n          id=\"village\"\n          name=\"village\"\n          value={formData.village}\n          onChange={handleChange}\n          required\n        />\n\n        {/* Block Input */}\n        <label htmlFor=\"block\">Block</label>\n        <input\n          type=\"text\"\n          id=\"block\"\n          name=\"block\"\n          value={formData.block}\n          onChange={handleChange}\n          required\n        />\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}