{"ast":null,"code":"var _jsxFileName = \"/Users/annjan/section1-form/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    month: '',\n    state: '',\n    district: '',\n    village: '',\n    block: ''\n  });\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put('http://localhost:8001/update', formData);\n      alert(response.data.message);\n      setFormData({\n        month: '',\n        state: '',\n        district: '',\n        village: '',\n        block: ''\n      }); // Reset form\n    } catch (error) {\n      console.error('Error updating the data:', error);\n      alert('Failed to update the data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Service Campaign Form \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"month\",\n        children: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"month\",\n        name: \"month\",\n        value: formData.month,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: month,\n          children: month\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"state\",\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"state\",\n        name: \"state\",\n        value: formData.state,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"district\",\n        children: \"District\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"district\",\n        name: \"district\",\n        value: formData.district,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"village\",\n        children: \"Village\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"village\",\n        name: \"village\",\n        value: formData.village,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"block\",\n        children: \"Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"block\",\n        name: \"block\",\n        value: formData.block,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qbegVqPQURw8QRrATf0iRuhMacU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","formData","setFormData","month","state","district","village","block","months","handleChange","e","name","value","target","handleSubmit","preventDefault","response","put","alert","data","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","required","map","index","type","_c","$RefreshReg$"],"sources":["/Users/annjan/section1-form/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [formData, setFormData] = useState({\n    month: '',\n    state: '',\n    district: '',\n    village: '',\n    block: ''\n  });\n\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ];\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.put('http://localhost:8001/update', formData);\n      alert(response.data.message);\n      setFormData({ month: '', state: '', district: '', village: '', block: '' }); // Reset form\n    } catch (error) {\n      console.error('Error updating the data:', error);\n      alert('Failed to update the data.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Service Campaign Form </h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"month\">Month</label>\n        <select\n          id=\"month\"\n          name=\"month\"\n          value={formData.month}\n          onChange={handleChange}\n          required\n        >\n          <option value=\"\">Select a month</option>\n          {months.map((month, index) => (\n            <option key={index} value={month}>\n              {month}\n            </option>\n          ))}\n        </select>\n\n        <label htmlFor=\"state\">State</label>\n        <input\n          type=\"text\"\n          id=\"state\"\n          name=\"state\"\n          value={formData.state}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"district\">District</label>\n        <input\n          type=\"text\"\n          id=\"district\"\n          name=\"district\"\n          value={formData.district}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"village\">Village</label>\n        <input\n          type=\"text\"\n          id=\"village\"\n          name=\"village\"\n          value={formData.village}\n          onChange={handleChange}\n          required\n        />\n\n        <label htmlFor=\"block\">Block</label>\n        <input\n          type=\"text\"\n          id=\"block\"\n          name=\"block\"\n          value={formData.block}\n          onChange={handleChange}\n          required\n        />\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}