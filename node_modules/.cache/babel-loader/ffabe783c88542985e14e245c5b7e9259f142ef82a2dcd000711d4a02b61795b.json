{"ast":null,"code":"var _jsxFileName = \"/Users/annjan/section1-form/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport campaigns from './campaigns'; // Import the campaigns list\nimport statesDistricts from './statesDistricts.json'; // Import the JSON file for states and districts\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    month: '',\n    state: '',\n    district: '',\n    village: '',\n    block: '',\n    campaignsData: {} // Added campaign-specific form fields\n  });\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  useEffect(() => {\n    const uniqueStates = [...new Set(statesDistricts.map(item => item.STATE))];\n    setStates(uniqueStates);\n\n    // Initialize campaignsData with empty Quantity and Amount fields\n    const initialCampaignsData = {};\n    campaigns.forEach(campaign => {\n      initialCampaignsData[campaign.id] = {\n        quantity: '',\n        amount: ''\n      };\n    });\n    setFormData(prev => ({\n      ...prev,\n      campaignsData: initialCampaignsData\n    }));\n  }, []);\n  const handleStateChange = e => {\n    const selectedState = e.target.value;\n    setFormData({\n      ...formData,\n      state: selectedState,\n      district: ''\n    });\n    const filteredDistricts = statesDistricts.filter(item => item.STATE === selectedState).map(item => item.DISTRICT);\n    setDistricts(filteredDistricts);\n  };\n  const handleFormChange = (e, campaignId, field) => {\n    const value = e.target.value;\n    setFormData(prev => ({\n      ...prev,\n      campaignsData: {\n        ...prev.campaignsData,\n        [campaignId]: {\n          ...prev.campaignsData[campaignId],\n          [field]: value\n        }\n      }\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put('http://localhost:8001/update', formData);\n      alert(response.data.message);\n    } catch (error) {\n      console.error('Error updating the data:', error);\n      alert('Failed to update the data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Service Campaign Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Location Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"month\",\n        children: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"month\",\n        name: \"month\",\n        value: formData.month,\n        onChange: e => setFormData({\n          ...formData,\n          month: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: month,\n          children: month\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"state\",\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"state\",\n        name: \"state\",\n        value: formData.state,\n        onChange: handleStateChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state,\n          children: state\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"district\",\n        children: \"District\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"district\",\n        name: \"district\",\n        value: formData.district,\n        onChange: e => setFormData({\n          ...formData,\n          district: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a district\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), districts.map((district, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: district,\n          children: district\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"village\",\n        children: \"Village\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"village\",\n        name: \"village\",\n        value: formData.village,\n        onChange: e => setFormData({\n          ...formData,\n          village: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"block\",\n        children: \"Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"block\",\n        name: \"block\",\n        value: formData.block,\n        onChange: e => setFormData({\n          ...formData,\n          block: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Section 2: Campaign Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), campaigns.map(campaign => {\n        var _formData$campaignsDa, _formData$campaignsDa2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [campaign.id, \". \", campaign.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            value: ((_formData$campaignsDa = formData.campaignsData[campaign.id]) === null || _formData$campaignsDa === void 0 ? void 0 : _formData$campaignsDa.quantity) || '',\n            onChange: e => handleFormChange(e, campaign.id, 'quantity')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            value: ((_formData$campaignsDa2 = formData.campaignsData[campaign.id]) === null || _formData$campaignsDa2 === void 0 ? void 0 : _formData$campaignsDa2.amount) || '',\n            onChange: e => handleFormChange(e, campaign.id, 'amount')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, campaign.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"93c+XadLk9AgCypZSHkZ2xI7QJs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","campaigns","statesDistricts","jsxDEV","_jsxDEV","App","_s","formData","setFormData","month","state","district","village","block","campaignsData","states","setStates","districts","setDistricts","months","uniqueStates","Set","map","item","STATE","initialCampaignsData","forEach","campaign","id","quantity","amount","prev","handleStateChange","e","selectedState","target","value","filteredDistricts","filter","DISTRICT","handleFormChange","campaignId","field","handleSubmit","preventDefault","response","put","alert","data","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","name","onChange","required","index","type","_formData$campaignsDa","_formData$campaignsDa2","style","marginBottom","min","_c","$RefreshReg$"],"sources":["/Users/annjan/section1-form/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport campaigns from './campaigns'; // Import the campaigns list\nimport statesDistricts from './statesDistricts.json'; // Import the JSON file for states and districts\nimport './App.css';\n\nconst App = () => {\n  const [formData, setFormData] = useState({\n    month: '',\n    state: '',\n    district: '',\n    village: '',\n    block: '',\n    campaignsData: {}, // Added campaign-specific form fields\n  });\n\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n\n  const months = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December',\n  ];\n\n  useEffect(() => {\n    const uniqueStates = [...new Set(statesDistricts.map((item) => item.STATE))];\n    setStates(uniqueStates);\n\n    // Initialize campaignsData with empty Quantity and Amount fields\n    const initialCampaignsData = {};\n    campaigns.forEach((campaign) => {\n      initialCampaignsData[campaign.id] = { quantity: '', amount: '' };\n    });\n    setFormData((prev) => ({ ...prev, campaignsData: initialCampaignsData }));\n  }, []);\n\n  const handleStateChange = (e) => {\n    const selectedState = e.target.value;\n    setFormData({ ...formData, state: selectedState, district: '' });\n\n    const filteredDistricts = statesDistricts\n      .filter((item) => item.STATE === selectedState)\n      .map((item) => item.DISTRICT);\n    setDistricts(filteredDistricts);\n  };\n\n  const handleFormChange = (e, campaignId, field) => {\n    const value = e.target.value;\n\n    setFormData((prev) => ({\n      ...prev,\n      campaignsData: {\n        ...prev.campaignsData,\n        [campaignId]: {\n          ...prev.campaignsData[campaignId],\n          [field]: value,\n        },\n      },\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.put('http://localhost:8001/update', formData);\n      alert(response.data.message);\n    } catch (error) {\n      console.error('Error updating the data:', error);\n      alert('Failed to update the data.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Service Campaign Form</h1>\n      <form onSubmit={handleSubmit}>\n        {/* Section 1: General Form Fields */}\n        <h2>Location Details</h2>\n\n        <label htmlFor=\"month\">Month</label>\n        <select\n          id=\"month\"\n          name=\"month\"\n          value={formData.month}\n          onChange={(e) => setFormData({ ...formData, month: e.target.value })}\n          required\n        >\n          <option value=\"\">Select a month</option>\n          {months.map((month, index) => (\n            <option key={index} value={month}>\n              {month}\n            </option>\n          ))}\n        </select>\n\n        <label htmlFor=\"state\">State</label>\n        <select\n          id=\"state\"\n          name=\"state\"\n          value={formData.state}\n          onChange={handleStateChange}\n          required\n        >\n          <option value=\"\">Select a state</option>\n          {states.map((state, index) => (\n            <option key={index} value={state}>\n              {state}\n            </option>\n          ))}\n        </select>\n\n        <label htmlFor=\"district\">District</label>\n        <select\n          id=\"district\"\n          name=\"district\"\n          value={formData.district}\n          onChange={(e) => setFormData({ ...formData, district: e.target.value })}\n          required\n        >\n          <option value=\"\">Select a district</option>\n          {districts.map((district, index) => (\n            <option key={index} value={district}>\n              {district}\n            </option>\n          ))}\n        </select>\n\n        <label htmlFor=\"village\">Village</label>\n        <input\n          type=\"text\"\n          id=\"village\"\n          name=\"village\"\n          value={formData.village}\n          onChange={(e) => setFormData({ ...formData, village: e.target.value })}\n          required\n        />\n\n        <label htmlFor=\"block\">Block</label>\n        <input\n          type=\"text\"\n          id=\"block\"\n          name=\"block\"\n          value={formData.block}\n          onChange={(e) => setFormData({ ...formData, block: e.target.value })}\n          required\n        />\n\n        {/* Section 2: Campaign Details */}\n        <h2>Section 2: Campaign Details</h2>\n        {campaigns.map((campaign) => (\n          <div key={campaign.id} style={{ marginBottom: '20px' }}>\n            <h3>\n              {campaign.id}. {campaign.name}\n            </h3>\n            <label>Quantity</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              value={formData.campaignsData[campaign.id]?.quantity || ''}\n              onChange={(e) => handleFormChange(e, campaign.id, 'quantity')}\n            />\n            <label>Amount</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              value={formData.campaignsData[campaign.id]?.amount || ''}\n              onChange={(e) => handleFormChange(e, campaign.id, 'amount')}\n            />\n          </div>\n        ))}\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}