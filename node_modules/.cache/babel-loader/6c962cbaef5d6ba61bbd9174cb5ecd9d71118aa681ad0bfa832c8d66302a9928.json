{"ast":null,"code":"var _jsxFileName = \"/Users/annjan/section1-form/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport campaigns from \"./campaigns\"; // Import the campaigns list\nimport statesDistricts from \"./statesDistricts.json\"; // Import the JSON file for states and districts\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    month: \"\",\n    state: \"\",\n    district: \"\",\n    village: \"\",\n    customVillage: \"\",\n    // To store the custom village name if \"Other\" is selected\n    block: \"\",\n    campaignsData: {} // Campaign-specific form fields\n  });\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [villages, setVillages] = useState([]); // To store villages for selected district\n  const [showPopup, setShowPopup] = useState(false); // Control the popup visibility\n  const [submittedData, setSubmittedData] = useState(null); // Store submitted data for popup display\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  useEffect(() => {\n    // Extract unique states and initialize campaignsData\n    const uniqueStates = [...new Set(statesDistricts.map(item => item.STATE.toLowerCase()) // Convert state names to lowercase\n    )];\n    setStates(uniqueStates.sort()); // Sort states in alphabetical order\n\n    const initialCampaignsData = {};\n    campaigns.forEach(campaign => {\n      initialCampaignsData[campaign.id] = {\n        quantity: \"\",\n        amount: \"\"\n      };\n    });\n    setFormData(prev => ({\n      ...prev,\n      campaignsData: initialCampaignsData\n    }));\n  }, []);\n  const handleStateChange = e => {\n    const selectedState = e.target.value.toLowerCase(); // Convert to lowercase\n    setFormData({\n      ...formData,\n      state: selectedState,\n      district: \"\",\n      village: \"\"\n    });\n    const filteredDistricts = [...new Set(statesDistricts.filter(item => item.STATE.toLowerCase() === selectedState) // Filter case-insensitively\n    .map(item => item.DISTRICT.toLowerCase()) // Convert district names to lowercase\n    )];\n    setDistricts(filteredDistricts.sort()); // Sort districts in alphabetical order\n  };\n  const handleDistrictChange = e => {\n    const selectedDistrict = e.target.value.toLowerCase(); // Convert to lowercase\n    setFormData({\n      ...formData,\n      district: selectedDistrict,\n      village: \"\"\n    });\n    const filteredVillages = statesDistricts.filter(item => item.DISTRICT.toLowerCase() === selectedDistrict) // Filter case-insensitively\n    .map(item => item.Village.toLowerCase()) // Convert village names to lowercase\n    .filter((village, index, self) => self.indexOf(village) === index); // Remove duplicate villages\n\n    setVillages(filteredVillages.sort()); // Sort villages in alphabetical order\n  };\n  const handleVillageChange = e => {\n    const selectedVillage = e.target.value.toLowerCase();\n    setFormData({\n      ...formData,\n      village: selectedVillage,\n      customVillage: \"\"\n    });\n\n    // If \"Other\" is selected, show the text input for custom village\n    if (selectedVillage === \"other\") {\n      setFormData({\n        ...formData,\n        village: selectedVillage\n      });\n    }\n  };\n  const handleCustomVillageChange = e => {\n    setFormData({\n      ...formData,\n      customVillage: e.target.value\n    });\n  };\n  const handleFormChange = (e, campaignId, field) => {\n    const value = e.target.value;\n    setFormData(prev => ({\n      ...prev,\n      campaignsData: {\n        ...prev.campaignsData,\n        [campaignId]: {\n          ...prev.campaignsData[campaignId],\n          [field]: value\n        }\n      }\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmittedData(formData); // Store form data to display in the popup\n    setShowPopup(true); // Show the confirmation popup\n  };\n  const handleConfirm = async () => {\n    try {\n      const response = await axios.put(\"http://localhost:8001/update\", submittedData);\n      alert(response.data.message);\n      // Clear the form after successful submission\n      setFormData({\n        month: \"\",\n        state: \"\",\n        district: \"\",\n        village: \"\",\n        customVillage: \"\",\n        // Reset custom village\n        block: \"\",\n        campaignsData: campaigns.reduce((acc, campaign) => {\n          acc[campaign.id] = {\n            quantity: \"\",\n            amount: \"\"\n          };\n          return acc;\n        }, {})\n      });\n      setShowPopup(false); // Close the popup\n    } catch (error) {\n      console.error(\"Error updating the data:\", error);\n      alert(\"Failed to update the data.\");\n    }\n  };\n  const handleCancel = () => {\n    setShowPopup(false); // Close the popup without submitting\n  };\n  const getFilteredData = data => {\n    const filteredCampaigns = Object.entries(data.campaignsData || {}).filter(([_, details]) => details.quantity || details.amount);\n    return {\n      ...data,\n      campaignsData: Object.fromEntries(filteredCampaigns) // Only campaigns with data\n    };\n  };\n  const filteredData = submittedData ? getFilteredData(submittedData) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Service Campaign Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"white-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Location Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: formData.month,\n          onChange: e => setFormData({\n            ...formData,\n            month: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: month,\n            children: month\n          }, month, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: formData.state,\n          onChange: handleStateChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), states.sort().map(state =>\n          /*#__PURE__*/\n          // Sort states in alphabetical order\n          _jsxDEV(\"option\", {\n            value: state,\n            children: [state.charAt(0).toUpperCase() + state.slice(1), \" \"]\n          }, state, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"District\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: formData.district,\n          onChange: handleDistrictChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a district\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), districts.sort().map(district =>\n          /*#__PURE__*/\n          // Sort districts in alphabetical order\n          _jsxDEV(\"option\", {\n            value: district,\n            children: [district.charAt(0).toUpperCase() + district.slice(1), \" \"]\n          }, district, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Village/Zone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: formData.village,\n          onChange: handleVillageChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a village\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), villages.sort().map((village, index) =>\n          /*#__PURE__*/\n          // Sort villages in alphabetical order\n          _jsxDEV(\"option\", {\n            value: village,\n            children: [village.charAt(0).toUpperCase() + village.slice(1), \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"other\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), formData.village === \"other\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Custom Village\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.customVillage,\n            onChange: handleCustomVillageChange,\n            placeholder: \"Enter a custom village name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.block,\n          onChange: e => setFormData({\n            ...formData,\n            block: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"white-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Campaign Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), campaigns.map(campaign => {\n          var _formData$campaignsDa, _formData$campaignsDa2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"campaign-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [campaign.id, \". \", campaign.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"campaign-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                placeholder: \"Quantity\",\n                value: ((_formData$campaignsDa = formData.campaignsData[campaign.id]) === null || _formData$campaignsDa === void 0 ? void 0 : _formData$campaignsDa.quantity) || \"\",\n                onChange: e => handleFormChange(e, campaign.id, \"quantity\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                placeholder: \"Amount\",\n                value: ((_formData$campaignsDa2 = formData.campaignsData[campaign.id]) === null || _formData$campaignsDa2 === void 0 ? void 0 : _formData$campaignsDa2.amount) || \"\",\n                onChange: e => handleFormChange(e, campaign.id, \"amount\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, campaign.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), showPopup && filteredData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Confirm Submission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Month:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 18\n            }, this), \" \", filteredData.month]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"State:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 18\n            }, this), \" \", filteredData.state]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"District:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 18\n            }, this), \" \", filteredData.district]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Village:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 18\n            }, this), \" \", filteredData.village === \"other\" ? filteredData.customVillage : filteredData.village]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Block:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 18\n            }, this), \" \", filteredData.block]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campaign-details-table\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Campaign Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.entries(filteredData.campaignsData).map(([campaignId, details]) => {\n                const campaign = campaigns.find(c => c.id === parseInt(campaignId));\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: campaign ? campaign.name : \"Unknown Campaign\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: details.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: details.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 25\n                  }, this)]\n                }, campaignId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirm,\n            children: \"Yes, Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancel,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SG/Xl09mzbPa3AWSSFcmr3vsnCs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","campaigns","statesDistricts","jsxDEV","_jsxDEV","App","_s","formData","setFormData","month","state","district","village","customVillage","block","campaignsData","states","setStates","districts","setDistricts","villages","setVillages","showPopup","setShowPopup","submittedData","setSubmittedData","months","uniqueStates","Set","map","item","STATE","toLowerCase","sort","initialCampaignsData","forEach","campaign","id","quantity","amount","prev","handleStateChange","e","selectedState","target","value","filteredDistricts","filter","DISTRICT","handleDistrictChange","selectedDistrict","filteredVillages","Village","index","self","indexOf","handleVillageChange","selectedVillage","handleCustomVillageChange","handleFormChange","campaignId","field","handleSubmit","preventDefault","handleConfirm","response","put","alert","data","message","reduce","acc","error","console","handleCancel","getFilteredData","filteredCampaigns","Object","entries","_","details","fromEntries","filteredData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","charAt","toUpperCase","slice","type","placeholder","_formData$campaignsDa","_formData$campaignsDa2","name","min","find","c","parseInt","onClick","_c","$RefreshReg$"],"sources":["/Users/annjan/section1-form/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport campaigns from \"./campaigns\"; // Import the campaigns list\nimport statesDistricts from \"./statesDistricts.json\"; // Import the JSON file for states and districts\nimport \"./App.css\";\n\nconst App = () => {\n  const [formData, setFormData] = useState({\n    month: \"\",\n    state: \"\",\n    district: \"\",\n    village: \"\",\n    customVillage: \"\", // To store the custom village name if \"Other\" is selected\n    block: \"\",\n    campaignsData: {}, // Campaign-specific form fields\n  });\n\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [villages, setVillages] = useState([]); // To store villages for selected district\n  const [showPopup, setShowPopup] = useState(false); // Control the popup visibility\n  const [submittedData, setSubmittedData] = useState(null); // Store submitted data for popup display\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  useEffect(() => {\n    // Extract unique states and initialize campaignsData\n    const uniqueStates = [\n      ...new Set(\n        statesDistricts.map((item) => item.STATE.toLowerCase()) // Convert state names to lowercase\n      ),\n    ];\n    setStates(uniqueStates.sort()); // Sort states in alphabetical order\n\n    const initialCampaignsData = {};\n    campaigns.forEach((campaign) => {\n      initialCampaignsData[campaign.id] = { quantity: \"\", amount: \"\" };\n    });\n    setFormData((prev) => ({ ...prev, campaignsData: initialCampaignsData }));\n  }, []);\n\n  const handleStateChange = (e) => {\n    const selectedState = e.target.value.toLowerCase(); // Convert to lowercase\n    setFormData({ ...formData, state: selectedState, district: \"\", village: \"\" });\n\n    const filteredDistricts = [\n      ...new Set(\n        statesDistricts\n          .filter((item) => item.STATE.toLowerCase() === selectedState) // Filter case-insensitively\n          .map((item) => item.DISTRICT.toLowerCase()) // Convert district names to lowercase\n      ),\n    ];\n    setDistricts(filteredDistricts.sort()); // Sort districts in alphabetical order\n  };\n\n  const handleDistrictChange = (e) => {\n    const selectedDistrict = e.target.value.toLowerCase(); // Convert to lowercase\n    setFormData({ ...formData, district: selectedDistrict, village: \"\" });\n\n    const filteredVillages = statesDistricts\n      .filter((item) => item.DISTRICT.toLowerCase() === selectedDistrict) // Filter case-insensitively\n      .map((item) => item.Village.toLowerCase()) // Convert village names to lowercase\n      .filter((village, index, self) => self.indexOf(village) === index); // Remove duplicate villages\n\n    setVillages(filteredVillages.sort()); // Sort villages in alphabetical order\n  };\n\n  const handleVillageChange = (e) => {\n    const selectedVillage = e.target.value.toLowerCase();\n    setFormData({ ...formData, village: selectedVillage, customVillage: \"\" });\n\n    // If \"Other\" is selected, show the text input for custom village\n    if (selectedVillage === \"other\") {\n      setFormData({ ...formData, village: selectedVillage });\n    }\n  };\n\n  const handleCustomVillageChange = (e) => {\n    setFormData({ ...formData, customVillage: e.target.value });\n  };\n\n  const handleFormChange = (e, campaignId, field) => {\n    const value = e.target.value;\n\n    setFormData((prev) => ({\n      ...prev,\n      campaignsData: {\n        ...prev.campaignsData,\n        [campaignId]: {\n          ...prev.campaignsData[campaignId],\n          [field]: value,\n        },\n      },\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmittedData(formData); // Store form data to display in the popup\n    setShowPopup(true); // Show the confirmation popup\n  };\n\n  const handleConfirm = async () => {\n    try {\n      const response = await axios.put(\n        \"http://localhost:8001/update\",\n        submittedData\n      );\n      alert(response.data.message);\n      // Clear the form after successful submission\n      setFormData({\n        month: \"\",\n        state: \"\",\n        district: \"\",\n        village: \"\",\n        customVillage: \"\", // Reset custom village\n        block: \"\",\n        campaignsData: campaigns.reduce((acc, campaign) => {\n          acc[campaign.id] = { quantity: \"\", amount: \"\" };\n          return acc;\n        }, {}),\n      });\n      setShowPopup(false); // Close the popup\n    } catch (error) {\n      console.error(\"Error updating the data:\", error);\n      alert(\"Failed to update the data.\");\n    }\n  };\n\n  const handleCancel = () => {\n    setShowPopup(false); // Close the popup without submitting\n  };\n\n  const getFilteredData = (data) => {\n    const filteredCampaigns = Object.entries(data.campaignsData || {}).filter(\n      ([_, details]) => details.quantity || details.amount\n    );\n\n    return {\n      ...data,\n      campaignsData: Object.fromEntries(filteredCampaigns), // Only campaigns with data\n    };\n  };\n\n  const filteredData = submittedData ? getFilteredData(submittedData) : null;\n\n  return (\n    <div className=\"container\">\n      <h1>Service Campaign Form</h1>\n      <form onSubmit={handleSubmit}>\n        {/* General Location Fields */}\n        <div className=\"white-box\">\n          <h2>Location Details</h2>\n          <label>Month</label>\n          <select\n            value={formData.month}\n            onChange={(e) => setFormData({ ...formData, month: e.target.value })}\n            required\n          >\n            <option value=\"\">Select a month</option>\n            {months.map((month) => (\n              <option key={month} value={month}>\n                {month}\n              </option>\n            ))}\n          </select>\n\n          <label>State</label>\n          <select value={formData.state} onChange={handleStateChange} required>\n            <option value=\"\">Select a state</option>\n            {states.sort().map((state) => ( // Sort states in alphabetical order\n              <option key={state} value={state}>\n                {state.charAt(0).toUpperCase() + state.slice(1)} {/* Display state with first letter capitalized */}\n              </option>\n            ))}\n          </select>\n\n          <label>District</label>\n          <select\n            value={formData.district}\n            onChange={handleDistrictChange}\n            required\n          >\n            <option value=\"\">Select a district</option>\n            {districts.sort().map((district) => ( // Sort districts in alphabetical order\n              <option key={district} value={district}>\n                {district.charAt(0).toUpperCase() + district.slice(1)} {/* Display district with first letter capitalized */}\n              </option>\n            ))}\n          </select>\n\n          <label>Village/Zone</label>\n          <select\n            value={formData.village}\n            onChange={handleVillageChange}\n            required\n          >\n            <option value=\"\">Select a village</option>\n            {villages.sort().map((village, index) => ( // Sort villages in alphabetical order\n              <option key={index} value={village}>\n                {village.charAt(0).toUpperCase() + village.slice(1)} {/* Display village with first letter capitalized */}\n              </option>\n            ))}\n            <option value=\"other\">Other</option> {/* Add the \"Other\" option */}\n          </select>\n\n          {formData.village === \"other\" && (\n            <div>\n              <label>Enter Custom Village</label>\n              <input\n                type=\"text\"\n                value={formData.customVillage}\n                onChange={handleCustomVillageChange}\n                placeholder=\"Enter a custom village name\"\n                required\n              />\n            </div>\n          )}\n\n          <label>Block</label>\n          <input\n            type=\"text\"\n            value={formData.block}\n            onChange={(e) =>\n              setFormData({ ...formData, block: e.target.value })\n            }\n            required\n          />\n        </div>\n\n        {/* Campaign Details */}\n        <div className=\"white-box\">\n          <h2>Campaign Details</h2>\n          {campaigns.map((campaign) => (\n            <div key={campaign.id} className=\"campaign-row\">\n              <h3>\n                {campaign.id}. {campaign.name}\n              </h3>\n              <div className=\"campaign-inputs\">\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  placeholder=\"Quantity\"\n                  value={formData.campaignsData[campaign.id]?.quantity || \"\"}\n                  onChange={(e) => handleFormChange(e, campaign.id, \"quantity\")}\n                />\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  placeholder=\"Amount\"\n                  value={formData.campaignsData[campaign.id]?.amount || \"\"}\n                  onChange={(e) => handleFormChange(e, campaign.id, \"amount\")}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {showPopup && filteredData && (\n        <div className=\"popup\">\n          <div className=\"popup-content\">\n            <h3>Confirm Submission</h3>\n\n            {/* Location Details */}\n            <div className=\"location-details\">\n              <p><strong>Month:</strong> {filteredData.month}</p>\n              <p><strong>State:</strong> {filteredData.state}</p>\n              <p><strong>District:</strong> {filteredData.district}</p>\n              <p><strong>Village:</strong> {filteredData.village === \"other\" ? filteredData.customVillage : filteredData.village}</p>\n              <p><strong>Block:</strong> {filteredData.block}</p>\n            </div>\n\n            {/* Campaign Details Table */}\n            <div className=\"campaign-details-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>Campaign Name</th>\n                    <th>Quantity</th>\n                    <th>Amount</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(filteredData.campaignsData).map(([campaignId, details]) => {\n                    const campaign = campaigns.find(c => c.id === parseInt(campaignId));\n                    return (\n                      <tr key={campaignId}>\n                        <td>{campaign ? campaign.name : \"Unknown Campaign\"}</td>\n                        <td>{details.quantity}</td>\n                        <td>{details.amount}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n\n            <div className=\"popup-actions\">\n              <button onClick={handleConfirm}>Yes, Submit</button>\n              <button onClick={handleCancel}>Edit</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}