{"ast":null,"code":"var _jsxFileName = \"/Users/annjan/section1-form/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport campaigns from \"./campaigns\"; // Import the campaigns list\nimport statesDistricts from \"./statesDistricts.json\"; // Import the JSON file for states and districts\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    month: \"\",\n    state: \"\",\n    district: \"\",\n    village: \"\",\n    block: \"\",\n    campaignsData: {} // Campaign-specific form fields\n  });\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [villages, setVillages] = useState([]); // To store villages for selected district\n  const [showPopup, setShowPopup] = useState(false); // Control the popup visibility\n  const [submittedData, setSubmittedData] = useState(null); // Store submitted data for popup display\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  useEffect(() => {\n    // Extract unique states and initialize campaignsData\n    const uniqueStates = [...new Set(statesDistricts.map(item => item.STATE.toLowerCase()) // Convert state names to lowercase\n    )];\n    setStates(uniqueStates);\n    const initialCampaignsData = {};\n    campaigns.forEach(campaign => {\n      initialCampaignsData[campaign.id] = {\n        quantity: \"\",\n        amount: \"\"\n      };\n    });\n    setFormData(prev => ({\n      ...prev,\n      campaignsData: initialCampaignsData\n    }));\n  }, []);\n  const handleStateChange = e => {\n    const selectedState = e.target.value.toLowerCase(); // Convert to lowercase\n    setFormData({\n      ...formData,\n      state: selectedState,\n      district: \"\",\n      village: \"\"\n    });\n    const filteredDistricts = [...new Set(statesDistricts.filter(item => item.STATE.toLowerCase() === selectedState) // Filter case-insensitively\n    .map(item => item.DISTRICT.toLowerCase()) // Convert district names to lowercase\n    )];\n    setDistricts(filteredDistricts);\n  };\n  const handleDistrictChange = e => {\n    const selectedDistrict = e.target.value.toLowerCase(); // Convert to lowercase\n    setFormData({\n      ...formData,\n      district: selectedDistrict,\n      village: \"\"\n    });\n    const filteredVillages = statesDistricts.filter(item => item.DISTRICT.toLowerCase() === selectedDistrict) // Filter case-insensitively\n    .map(item => item.Village.toLowerCase()) // Convert village names to lowercase\n    .filter((village, index, self) => self.indexOf(village) === index); // Remove duplicate villages\n\n    setVillages(filteredVillages);\n  };\n  const handleFormChange = (e, campaignId, field) => {\n    const value = e.target.value;\n    setFormData(prev => ({\n      ...prev,\n      campaignsData: {\n        ...prev.campaignsData,\n        [campaignId]: {\n          ...prev.campaignsData[campaignId],\n          [field]: value\n        }\n      }\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmittedData(formData); // Store form data to display in the popup\n    setShowPopup(true); // Show the confirmation popup\n  };\n  const handleConfirm = async () => {\n    try {\n      const response = await axios.put(\"http://localhost:8001/update\", submittedData);\n      alert(response.data.message);\n      // Clear the form after successful submission\n      setFormData({\n        month: \"\",\n        state: \"\",\n        district: \"\",\n        village: \"\",\n        block: \"\",\n        campaignsData: campaigns.reduce((acc, campaign) => {\n          acc[campaign.id] = {\n            quantity: \"\",\n            amount: \"\"\n          };\n          return acc;\n        }, {})\n      });\n      setShowPopup(false); // Close the popup\n    } catch (error) {\n      console.error(\"Error updating the data:\", error);\n      alert(\"Failed to update the data.\");\n    }\n  };\n  const handleCancel = () => {\n    setShowPopup(false); // Close the popup without submitting\n  };\n  const getFilteredData = data => {\n    const filteredCampaigns = Object.entries(data.campaignsData || {}).filter(([_, details]) => details.quantity || details.amount);\n    return {\n      ...data,\n      campaignsData: Object.fromEntries(filteredCampaigns) // Only campaigns with data\n    };\n  };\n  const filteredData = submittedData ? getFilteredData(submittedData) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Service Campaign Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"white-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Location Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: formData.month,\n          onChange: e => setFormData({\n            ...formData,\n            month: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: month,\n            children: month\n          }, month, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: formData.state,\n          onChange: handleStateChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: state,\n            children: [state.charAt(0).toUpperCase() + state.slice(1), \" \"]\n          }, state, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"District\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: formData.district,\n          onChange: handleDistrictChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a district\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), districts.map(district => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: district,\n            children: [district.charAt(0).toUpperCase() + district.slice(1), \" \"]\n          }, district, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Village/Zone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: formData.village,\n          onChange: e => setFormData({\n            ...formData,\n            village: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a village\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), villages.map((village, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: village,\n            children: [village.charAt(0).toUpperCase() + village.slice(1), \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.block,\n          onChange: e => setFormData({\n            ...formData,\n            block: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"white-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Campaign Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), campaigns.map(campaign => {\n          var _formData$campaignsDa, _formData$campaignsDa2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"campaign-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [campaign.id, \". \", campaign.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"campaign-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                placeholder: \"Quantity\",\n                value: ((_formData$campaignsDa = formData.campaignsData[campaign.id]) === null || _formData$campaignsDa === void 0 ? void 0 : _formData$campaignsDa.quantity) || \"\",\n                onChange: e => handleFormChange(e, campaign.id, \"quantity\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                placeholder: \"Amount\",\n                value: ((_formData$campaignsDa2 = formData.campaignsData[campaign.id]) === null || _formData$campaignsDa2 === void 0 ? void 0 : _formData$campaignsDa2.amount) || \"\",\n                onChange: e => handleFormChange(e, campaign.id, \"amount\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, campaign.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), showPopup && filteredData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Confirm Submission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), filteredData.month && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Month: \", filteredData.month]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirm,\n          children: \"Yes, Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"njkX1oEySIxgKRsHLe8sx+ftRU0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","campaigns","statesDistricts","jsxDEV","_jsxDEV","App","_s","formData","setFormData","month","state","district","village","block","campaignsData","states","setStates","districts","setDistricts","villages","setVillages","showPopup","setShowPopup","submittedData","setSubmittedData","months","uniqueStates","Set","map","item","STATE","toLowerCase","initialCampaignsData","forEach","campaign","id","quantity","amount","prev","handleStateChange","e","selectedState","target","value","filteredDistricts","filter","DISTRICT","handleDistrictChange","selectedDistrict","filteredVillages","Village","index","self","indexOf","handleFormChange","campaignId","field","handleSubmit","preventDefault","handleConfirm","response","put","alert","data","message","reduce","acc","error","console","handleCancel","getFilteredData","filteredCampaigns","Object","entries","_","details","fromEntries","filteredData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","charAt","toUpperCase","slice","type","_formData$campaignsDa","_formData$campaignsDa2","name","min","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/annjan/section1-form/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport campaigns from \"./campaigns\"; // Import the campaigns list\nimport statesDistricts from \"./statesDistricts.json\"; // Import the JSON file for states and districts\nimport \"./App.css\";\n\nconst App = () => {\n  const [formData, setFormData] = useState({\n    month: \"\",\n    state: \"\",\n    district: \"\",\n    village: \"\",\n    block: \"\",\n    campaignsData: {}, // Campaign-specific form fields\n  });\n\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [villages, setVillages] = useState([]); // To store villages for selected district\n  const [showPopup, setShowPopup] = useState(false); // Control the popup visibility\n  const [submittedData, setSubmittedData] = useState(null); // Store submitted data for popup display\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  useEffect(() => {\n    // Extract unique states and initialize campaignsData\n    const uniqueStates = [\n      ...new Set(\n        statesDistricts.map((item) => item.STATE.toLowerCase()) // Convert state names to lowercase\n      ),\n    ];\n    setStates(uniqueStates);\n\n    const initialCampaignsData = {};\n    campaigns.forEach((campaign) => {\n      initialCampaignsData[campaign.id] = { quantity: \"\", amount: \"\" };\n    });\n    setFormData((prev) => ({ ...prev, campaignsData: initialCampaignsData }));\n  }, []);\n\n  const handleStateChange = (e) => {\n    const selectedState = e.target.value.toLowerCase(); // Convert to lowercase\n    setFormData({ ...formData, state: selectedState, district: \"\", village: \"\" });\n\n    const filteredDistricts = [\n      ...new Set(\n        statesDistricts\n          .filter((item) => item.STATE.toLowerCase() === selectedState) // Filter case-insensitively\n          .map((item) => item.DISTRICT.toLowerCase()) // Convert district names to lowercase\n      ),\n    ];\n    setDistricts(filteredDistricts);\n  };\n\n  const handleDistrictChange = (e) => {\n    const selectedDistrict = e.target.value.toLowerCase(); // Convert to lowercase\n    setFormData({ ...formData, district: selectedDistrict, village: \"\" });\n\n    const filteredVillages = statesDistricts\n      .filter((item) => item.DISTRICT.toLowerCase() === selectedDistrict) // Filter case-insensitively\n      .map((item) => item.Village.toLowerCase()) // Convert village names to lowercase\n      .filter((village, index, self) => self.indexOf(village) === index); // Remove duplicate villages\n\n    setVillages(filteredVillages);\n  };\n\n  const handleFormChange = (e, campaignId, field) => {\n    const value = e.target.value;\n\n    setFormData((prev) => ({\n      ...prev,\n      campaignsData: {\n        ...prev.campaignsData,\n        [campaignId]: {\n          ...prev.campaignsData[campaignId],\n          [field]: value,\n        },\n      },\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmittedData(formData); // Store form data to display in the popup\n    setShowPopup(true); // Show the confirmation popup\n  };\n\n  const handleConfirm = async () => {\n    try {\n      const response = await axios.put(\n        \"http://localhost:8001/update\",\n        submittedData\n      );\n      alert(response.data.message);\n      // Clear the form after successful submission\n      setFormData({\n        month: \"\",\n        state: \"\",\n        district: \"\",\n        village: \"\",\n        block: \"\",\n        campaignsData: campaigns.reduce((acc, campaign) => {\n          acc[campaign.id] = { quantity: \"\", amount: \"\" };\n          return acc;\n        }, {}),\n      });\n      setShowPopup(false); // Close the popup\n    } catch (error) {\n      console.error(\"Error updating the data:\", error);\n      alert(\"Failed to update the data.\");\n    }\n  };\n\n  const handleCancel = () => {\n    setShowPopup(false); // Close the popup without submitting\n  };\n\n  const getFilteredData = (data) => {\n    const filteredCampaigns = Object.entries(data.campaignsData || {}).filter(\n      ([_, details]) => details.quantity || details.amount\n    );\n\n    return {\n      ...data,\n      campaignsData: Object.fromEntries(filteredCampaigns), // Only campaigns with data\n    };\n  };\n\n  const filteredData = submittedData ? getFilteredData(submittedData) : null;\n\n  return (\n    <div className=\"container\">\n      <h1>Service Campaign Form</h1>\n      <form onSubmit={handleSubmit}>\n        {/* General Location Fields */}\n        <div className=\"white-box\">\n          <h2>Location Details</h2>\n          <label>Month</label>\n          <select\n            value={formData.month}\n            onChange={(e) => setFormData({ ...formData, month: e.target.value })}\n            required\n          >\n            <option value=\"\">Select a month</option>\n            {months.map((month) => (\n              <option key={month} value={month}>\n                {month}\n              </option>\n            ))}\n          </select>\n\n          <label>State</label>\n          <select value={formData.state} onChange={handleStateChange} required>\n            <option value=\"\">Select a state</option>\n            {states.map((state) => (\n              <option key={state} value={state}>\n                {state.charAt(0).toUpperCase() + state.slice(1)} {/* Display state with first letter capitalized */}\n              </option>\n            ))}\n          </select>\n\n          <label>District</label>\n          <select\n            value={formData.district}\n            onChange={handleDistrictChange}\n            required\n          >\n            <option value=\"\">Select a district</option>\n            {districts.map((district) => (\n              <option key={district} value={district}>\n                {district.charAt(0).toUpperCase() + district.slice(1)} {/* Display district with first letter capitalized */}\n              </option>\n            ))}\n          </select>\n\n          <label>Village/Zone</label>\n          <select\n            value={formData.village}\n            onChange={(e) =>\n              setFormData({ ...formData, village: e.target.value })\n            }\n            required\n          >\n            <option value=\"\">Select a village</option>\n            {villages.map((village, index) => (\n              <option key={index} value={village}>\n                {village.charAt(0).toUpperCase() + village.slice(1)} {/* Display village with first letter capitalized */}\n              </option>\n            ))}\n          </select>\n\n          <label>Block</label>\n          <input\n            type=\"text\"\n            value={formData.block}\n            onChange={(e) =>\n              setFormData({ ...formData, block: e.target.value })\n            }\n            required\n          />\n        </div>\n\n        {/* Campaign Details */}\n        <div className=\"white-box\">\n          <h2>Campaign Details</h2>\n          {campaigns.map((campaign) => (\n            <div key={campaign.id} className=\"campaign-row\">\n              <h3>\n                {campaign.id}. {campaign.name}\n              </h3>\n              <div className=\"campaign-inputs\">\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  placeholder=\"Quantity\"\n                  value={formData.campaignsData[campaign.id]?.quantity || \"\"}\n                  onChange={(e) => handleFormChange(e, campaign.id, \"quantity\")}\n                />\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  placeholder=\"Amount\"\n                  value={formData.campaignsData[campaign.id]?.amount || \"\"}\n                  onChange={(e) => handleFormChange(e, campaign.id, \"amount\")}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {showPopup && filteredData && (\n        <div className=\"popup\">\n          <div className=\"popup-content\">\n            <h3>Confirm Submission</h3>\n            {/* Display submitted data */}\n            {filteredData.month && <p>Month: {filteredData.month}</p>}\n            {/* Add more fields here */}\n            <button onClick={handleConfirm}>Yes, Submit</button>\n            <button onClick={handleCancel}>Cancel</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}