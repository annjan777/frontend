{"ast":null,"code":"var _jsxFileName = \"/Users/annjan/section1-form/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport campaigns from \"./campaigns\"; // Import the campaigns list\nimport statesDistricts from \"./statesDistricts.json\"; // Import the JSON file for states and districts\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    month: \"\",\n    state: \"\",\n    district: \"\",\n    village: \"\",\n    customVillage: \"\",\n    block: \"\",\n    campaignsData: {}\n  });\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [villages, setVillages] = useState([]);\n  const [filteredDistricts, setFilteredDistricts] = useState([]);\n  const [filteredVillages, setFilteredVillages] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [submittedData, setSubmittedData] = useState(null);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  useEffect(() => {\n    const uniqueStates = [...new Set(statesDistricts.map(item => item.STATE))];\n    setStates(uniqueStates.sort());\n    const initialCampaignsData = {};\n    campaigns.forEach(campaign => {\n      initialCampaignsData[campaign.id] = {\n        quantity: \"\",\n        amount: \"\"\n      };\n    });\n    setFormData(prev => ({\n      ...prev,\n      campaignsData: initialCampaignsData\n    }));\n  }, []);\n  const handleStateChange = e => {\n    const selectedState = e.target.value;\n    setFormData({\n      ...formData,\n      state: selectedState,\n      district: \"\",\n      village: \"\"\n    });\n    const districtList = statesDistricts.filter(item => item.STATE === selectedState).map(item => item.DISTRICT);\n    setDistricts([...new Set(districtList)].sort());\n    setFilteredDistricts([...new Set(districtList)].sort());\n  };\n  const handleDistrictInputChange = e => {\n    const input = e.target.value;\n    setFormData({\n      ...formData,\n      district: input,\n      village: \"\"\n    });\n    if (input) {\n      const filtered = districts.filter(district => district.toLowerCase().startsWith(input.toLowerCase()));\n      setFilteredDistricts(filtered);\n    } else {\n      setFilteredDistricts(districts);\n    }\n  };\n  const handleDistrictSelect = district => {\n    setFormData({\n      ...formData,\n      district,\n      village: \"\"\n    });\n    const villageList = statesDistricts.filter(item => item.DISTRICT === district).map(item => item.Village);\n    setVillages([...new Set(villageList)].sort());\n    setFilteredVillages([...new Set(villageList)].sort());\n  };\n  const handleVillageInputChange = e => {\n    const input = e.target.value;\n    setFormData({\n      ...formData,\n      village: input\n    });\n    if (input) {\n      const filtered = villages.filter(village => village.toLowerCase().startsWith(input.toLowerCase()));\n      setFilteredVillages(filtered);\n    } else {\n      setFilteredVillages(villages);\n    }\n  };\n  const handleVillageSelect = village => {\n    setFormData({\n      ...formData,\n      village\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmittedData(formData);\n    setShowPopup(true);\n  };\n  const handleConfirm = async () => {\n    try {\n      const response = await axios.put(\"http://localhost:8001/update\", submittedData);\n      alert(response.data.message);\n      setFormData({\n        month: \"\",\n        state: \"\",\n        district: \"\",\n        village: \"\",\n        customVillage: \"\",\n        block: \"\",\n        campaignsData: campaigns.reduce((acc, campaign) => {\n          acc[campaign.id] = {\n            quantity: \"\",\n            amount: \"\"\n          };\n          return acc;\n        }, {})\n      });\n      setShowPopup(false);\n    } catch (error) {\n      console.error(\"Error updating the data:\", error);\n      alert(\"Failed to update the data.\");\n    }\n  };\n  const handleCancel = () => {\n    setShowPopup(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Service Campaign Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"white-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Location Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: formData.month,\n          onChange: e => setFormData({\n            ...formData,\n            month: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: month,\n            children: month\n          }, month, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: formData.state,\n          onChange: handleStateChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: state,\n            children: state\n          }, state, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"District\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.district,\n          onChange: handleDistrictInputChange,\n          placeholder: \"Type to search districts\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: filteredDistricts.map(district => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-item\",\n            onClick: () => handleDistrictSelect(district),\n            children: district\n          }, district, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Village/Zone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.village,\n          onChange: handleVillageInputChange,\n          placeholder: \"Type to search villages\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: filteredVillages.map(village => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-item\",\n            onClick: () => handleVillageSelect(village),\n            children: village\n          }, village, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.block,\n          onChange: e => setFormData({\n            ...formData,\n            block: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Confirm Submission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Month: \", submittedData.month]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"State: \", submittedData.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"District: \", submittedData.district]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Village: \", submittedData.village]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Block: \", submittedData.block]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirm,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+o7rXOZ9P2KUPwyKYBKLeq4cSyU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","campaigns","statesDistricts","jsxDEV","_jsxDEV","App","_s","formData","setFormData","month","state","district","village","customVillage","block","campaignsData","states","setStates","districts","setDistricts","villages","setVillages","filteredDistricts","setFilteredDistricts","filteredVillages","setFilteredVillages","showPopup","setShowPopup","submittedData","setSubmittedData","months","uniqueStates","Set","map","item","STATE","sort","initialCampaignsData","forEach","campaign","id","quantity","amount","prev","handleStateChange","e","selectedState","target","value","districtList","filter","DISTRICT","handleDistrictInputChange","input","filtered","toLowerCase","startsWith","handleDistrictSelect","villageList","Village","handleVillageInputChange","handleVillageSelect","handleSubmit","preventDefault","handleConfirm","response","put","alert","data","message","reduce","acc","error","console","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/annjan/section1-form/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport campaigns from \"./campaigns\"; // Import the campaigns list\nimport statesDistricts from \"./statesDistricts.json\"; // Import the JSON file for states and districts\nimport \"./App.css\";\n\nconst App = () => {\n  const [formData, setFormData] = useState({\n    month: \"\",\n    state: \"\",\n    district: \"\",\n    village: \"\",\n    customVillage: \"\",\n    block: \"\",\n    campaignsData: {},\n  });\n\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [villages, setVillages] = useState([]);\n  const [filteredDistricts, setFilteredDistricts] = useState([]);\n  const [filteredVillages, setFilteredVillages] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [submittedData, setSubmittedData] = useState(null);\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  useEffect(() => {\n    const uniqueStates = [\n      ...new Set(statesDistricts.map((item) => item.STATE)),\n    ];\n    setStates(uniqueStates.sort());\n\n    const initialCampaignsData = {};\n    campaigns.forEach((campaign) => {\n      initialCampaignsData[campaign.id] = { quantity: \"\", amount: \"\" };\n    });\n    setFormData((prev) => ({ ...prev, campaignsData: initialCampaignsData }));\n  }, []);\n\n  const handleStateChange = (e) => {\n    const selectedState = e.target.value;\n    setFormData({ ...formData, state: selectedState, district: \"\", village: \"\" });\n\n    const districtList = statesDistricts\n      .filter((item) => item.STATE === selectedState)\n      .map((item) => item.DISTRICT);\n    setDistricts([...new Set(districtList)].sort());\n    setFilteredDistricts([...new Set(districtList)].sort());\n  };\n\n  const handleDistrictInputChange = (e) => {\n    const input = e.target.value;\n    setFormData({ ...formData, district: input, village: \"\" });\n\n    if (input) {\n      const filtered = districts.filter((district) =>\n        district.toLowerCase().startsWith(input.toLowerCase())\n      );\n      setFilteredDistricts(filtered);\n    } else {\n      setFilteredDistricts(districts);\n    }\n  };\n\n  const handleDistrictSelect = (district) => {\n    setFormData({ ...formData, district, village: \"\" });\n\n    const villageList = statesDistricts\n      .filter((item) => item.DISTRICT === district)\n      .map((item) => item.Village);\n    setVillages([...new Set(villageList)].sort());\n    setFilteredVillages([...new Set(villageList)].sort());\n  };\n\n  const handleVillageInputChange = (e) => {\n    const input = e.target.value;\n    setFormData({ ...formData, village: input });\n\n    if (input) {\n      const filtered = villages.filter((village) =>\n        village.toLowerCase().startsWith(input.toLowerCase())\n      );\n      setFilteredVillages(filtered);\n    } else {\n      setFilteredVillages(villages);\n    }\n  };\n\n  const handleVillageSelect = (village) => {\n    setFormData({ ...formData, village });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmittedData(formData);\n    setShowPopup(true);\n  };\n\n  const handleConfirm = async () => {\n    try {\n      const response = await axios.put(\"http://localhost:8001/update\", submittedData);\n      alert(response.data.message);\n      setFormData({\n        month: \"\",\n        state: \"\",\n        district: \"\",\n        village: \"\",\n        customVillage: \"\",\n        block: \"\",\n        campaignsData: campaigns.reduce((acc, campaign) => {\n          acc[campaign.id] = { quantity: \"\", amount: \"\" };\n          return acc;\n        }, {}),\n      });\n      setShowPopup(false);\n    } catch (error) {\n      console.error(\"Error updating the data:\", error);\n      alert(\"Failed to update the data.\");\n    }\n  };\n\n  const handleCancel = () => {\n    setShowPopup(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Service Campaign Form</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"white-box\">\n          <h2>Location Details</h2>\n          <label>Month</label>\n          <select\n            value={formData.month}\n            onChange={(e) => setFormData({ ...formData, month: e.target.value })}\n            required\n          >\n            <option value=\"\">Select a month</option>\n            {months.map((month) => (\n              <option key={month} value={month}>\n                {month}\n              </option>\n            ))}\n          </select>\n\n          <label>State</label>\n          <select value={formData.state} onChange={handleStateChange} required>\n            <option value=\"\">Select a state</option>\n            {states.map((state) => (\n              <option key={state} value={state}>\n                {state}\n              </option>\n            ))}\n          </select>\n\n          <label>District</label>\n          <input\n            type=\"text\"\n            value={formData.district}\n            onChange={handleDistrictInputChange}\n            placeholder=\"Type to search districts\"\n            required\n          />\n          <div className=\"dropdown\">\n            {filteredDistricts.map((district) => (\n              <div\n                key={district}\n                className=\"dropdown-item\"\n                onClick={() => handleDistrictSelect(district)}\n              >\n                {district}\n              </div>\n            ))}\n          </div>\n\n          <label>Village/Zone</label>\n          <input\n            type=\"text\"\n            value={formData.village}\n            onChange={handleVillageInputChange}\n            placeholder=\"Type to search villages\"\n            required\n          />\n          <div className=\"dropdown\">\n            {filteredVillages.map((village) => (\n              <div\n                key={village}\n                className=\"dropdown-item\"\n                onClick={() => handleVillageSelect(village)}\n              >\n                {village}\n              </div>\n            ))}\n          </div>\n\n          <label>Block</label>\n          <input\n            type=\"text\"\n            value={formData.block}\n            onChange={(e) =>\n              setFormData({ ...formData, block: e.target.value })\n            }\n            required\n          />\n        </div>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {showPopup && (\n        <div className=\"popup\">\n          <div className=\"popup-content\">\n            <h3>Confirm Submission</h3>\n            <p>Month: {submittedData.month}</p>\n            <p>State: {submittedData.state}</p>\n            <p>District: {submittedData.district}</p>\n            <p>Village: {submittedData.village}</p>\n            <p>Block: {submittedData.block}</p>\n            <div className=\"popup-actions\">\n              <button onClick={handleConfirm}>Confirm</button>\n              <button onClick={handleCancel}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}